{"version":3,"file":"index.js","sources":["../src/home.js"],"sourcesContent":["import axios from 'axios';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst products = document.querySelector(\".products\");\nconst categories = document.querySelector(\".categories\");\n\n\n\n\n\n\n\n\n\n\n\n\n// import axios from 'axios';\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '50787945-1edbab8bb6a94afd781f3e3fd';\n\n// // Ця функція повинна приймати два параметри query (пошукове слово, яке є рядком) та page (номер сторінки, яка є числом), здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\n\n// export async function getImagesByQuery(query, page = 1) {\n//   const params = {\n//     key: API_KEY,\n//     q: query,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: true,\n//     per_page: 15,\n//     page: page,\n//   };\n\n//   const response = await axios(BASE_URL, { params });\n//   return response.data;\n// }\n\n\n\n\n\n\n// // Цей рядок імпортує бібліотеку iziToast — це популярна JavaScript-бібліотека для створення гарних сповіщень (тостів) у вебдодатках.\n// import iziToast from 'izitoast';\n\n// // Цей рядок імпортує CSS-стилі iziToast.\n// // Вони потрібні, щоб зробити візуальне оформлення сповіщень відповідно до дизайну iziToast (кольори, анімації, розташування тостів тощо).\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// import { getImagesByQuery } from './js/pixabay-api';\n// import {    \n//   createGallery,             //створювати HTML-розмітку для галереї\n//   clearGallery,              // обнуляємо  HTML-розмітку для галереї\n//   showLoader,                // показує ІНДИКАТОР ЗАВАНТАЖЕННЯ\n//   hideLoader,                // приховує ІНДИКАТОР ЗАВАНТАЖЕННЯ\n//   showLoadMoreButton,         //  показує КНОПКУ \"LOAD MORE\"\n//   hideLoadMoreButton,         //  приховує КНОПКУ \"LOAD MORE\"\n// } from './js/render-functions';\n\n// const searchForm = document.querySelector('.form');\n// const loadMoreBtn = document.querySelector('.load-more');\n\n// let currentQuery = '';\n// let currentPage = 1;\n// let totalPages = 0;\n\n// searchForm.addEventListener('submit', handleSubmit);\n// loadMoreBtn.addEventListener('click', handleLoadMore);\n\n// async function handleSubmit(event) {\n//   event.preventDefault();\n//   const query = event.target.elements.query.value.trim();\n\n//   console.log(event);\n  \n\n//   if (!query) {\n//     iziToast.error({\n//       message: 'Please enter a search query',\n//       position: 'topRight',\n//     });\n//     return;\n//   }\n\n//   currentQuery = query;\n//   currentPage = 1;\n\n//   try {\n//     showLoader(); // Показуємо лоадер\n//     hideLoadMoreButton(); // Приховуємо кнопку \"Load more\"\n//     clearGallery(); // Очищаємо попередню галерею\n\n//     const data = await getImagesByQuery(currentQuery, currentPage);\n//     console.log(data);\n//     console.log(data.hits.length);\n\n//     if (data.hits.length === 0) {\n//       //  Метод бібліотеки iziToast, який показує інформаційне (info) повідомлення. Якщо бекенд повертає порожній масив, це означає, що нічого підходящого не було знайдено. У такому випадку відображай повідомлення з текстом:\n//       //  'Sorry, there are no images matching your search query. Please try again!'\n//       iziToast.info({\n//         message:\n//           'Sorry, there are no images matching your search query. Please try again!',\n//         position: 'topRight',\n//       });\n//       return;\n//     }\n\n//     createGallery(data.hits);     //створюємо HTML-розмітку для галереї і відмальовуємо її на сторінці\n//     console.log(data.hits);\n\n//     // розрахунок скільки в мене буде всього сторінок\n//     totalPages = Math.ceil(data.totalHits / 15);\n\n//     // перевірка, чи є сторінка останьою\n//     if (currentPage < totalPages) {\n//       showLoadMoreButton();\n//     }\n//   } catch (error) {\n//     iziToast.error({\n//       message: 'Something went wrong. Please try again later.',\n//       position: 'topRight',\n//     });\n//   } finally {\n//     hideLoader(); // Ховаємо лоадер, навіть при помилці\n//   }\n//   event.target.reset();   //  Очищає всі поля форми (текстові поля, випадаючі списки, радіокнопки, чекбокси тощо)\n// }\n\n\n// //  робота КНОПКИ \"LOAD MORE\"\n// async function handleLoadMore() {\n//   currentPage += 1;\n\n//   try {\n//     showLoader(); // Показуємо лоадер\n//     hideLoadMoreButton(); // Приховуємо кнопку \"Load more\" (щоб не було багато натискань на кнопку від користувача) ???\n\n//     const data = await getImagesByQuery(currentQuery, currentPage);\n//     createGallery(data.hits);\n\n//     // Знаходимо перший елемент на сторінці з класом gallery-item.\n//     const galleryItem = document.querySelector('.gallery-item');\n\n//     //     Отримуємо розміри та позицію елемента відносно вікна перегляду.\n//     // Беремо тільки висоту (height).\n//     const { height } = galleryItem.getBoundingClientRect();\n//     window.scrollBy({\n//       top: height * 2, // Прокручує сторінку вниз на величину height * 200 пікселів з плавною анімацією \"smooth\":\n//       behavior: 'smooth',\n//     });\n\n//     totalPages = Math.ceil(data.totalHits / 15);\n//     if (currentPage >= totalPages) {\n//       hideLoadMoreButton(); // Приховуємо кнопку \"Load more\"\n\n//       iziToast.info({\n//         message: \"We're sorry, but you've reached the end of search results.\",\n//         position: 'topRight',\n//       });\n//     } else {\n//       showLoadMoreButton();    //  показує КНОПКУ \"LOAD MORE\"\n//     }\n//   } catch (error) {\n//     iziToast.error({\n//       message: 'Something went wrong. Please try again later.',\n//       position: 'topRight',\n//     });\n//   } finally {\n//     hideLoader(); // Ховаємо лоадер\n//   }\n// }\n"],"names":[],"mappings":"wEAMiB,SAAS,cAAc,WAAW,EAChC,SAAS,cAAc,aAAa"}